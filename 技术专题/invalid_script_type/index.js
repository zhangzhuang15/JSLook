

document.addEventListener("DOMContentLoaded", () => {
    var script = document.querySelector("script[type='text/jasonzhang']");
    const rawCodes = script.innerHTML;

    // 模拟 babel 编译
    const resolvedCodes = rawCodes.replace("#", "document.getElementById('#')").trim();

    // script[type="text/jasonzhang"] 替换为 script[type="text/javascript"]
    var scriptReplacement = document.createElement("script");
    scriptReplacement.type = 'text/javascript';
    scriptReplacement.innerHTML = '// codes generated by jasonzhang;\n' + resolvedCodes;
    document.body.replaceChild(scriptReplacement, script);
})




/**
 * 之前看过一个人的项目，他在html的script标签内，使用
 * jsx语法编写代码，然后直接运行了html，没有使用webpack
 * or rollup 做处理，感觉很神奇。
 * 
 * 发现其项目中引入了babel.js, script标签的type属性为 text/babel，
 * 我打算模拟一下，原理我猜测是 babel.js 会处理所有 script[type="text/babel"],
 * 将其中的内容编译之后，替换为正常的 script 标签。
 * 
 * 我又发现项目中，babel.js是在 head 里引入的，要处理的script是
 * 在 body 里，因此我觉得在babel.js里，应该是注册了什么浏览器事件。
 * 我没有看babel源码，使用 DOMContentLoaded 事件模拟一下。当
 * DOM解析完毕，script执行完毕后，该事件就会触发。
 * 
 * 根据MDN的介绍，如果type属性是非法的MIME值，浏览器解析的时候会
 * 直接忽略script。这种script会保留在 html 中，但是不会被解析执行。
 * 
 */